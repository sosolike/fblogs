一：Python内置数据结构：
    1：列表：list：python中的list就是一个可以存储任意数据类型数据的线性表；符号为[]； 如：[1,2,3,4]；
        1：列表特征：
            1：列表中的元素可以是任意数据类型的数据，但只能是值本身，不能存储k-v键值对；
            2：列表中的元素默认按照存储顺序排序；从左向右序号从0开始计数，从右向左序号从-1开始计数；
            3：list在python中是可变对象；列表中的元素可以任意增加、修改或者删除；
        2：列表支持的操作：
            创建列表：
                1：通过[]创建列表：
                    1：lista = []    #创建空列表
                    2：lista =[1,2,3]    #创建有元素的列表
                2：通过列表生成式创建列表：
                    1：lista = [表达式 for 变量 in 列表]    #列表生成式生成列表，如：[i+1 for i in range(10)]
                    2：lista = [表达式 for 变量 in 列表 if 表达式]    #带条件的列表生成式生成列表，如：[i*2 for i in range(5) if i%2==0 ]
                3：将其他数据类型转换为列表：
                    1：lista = list(tuple)    #将tuple类型的数据转换为list类型，如：list((1,2,3,4))
                    2：dicta.keys()    #将字典的key提取为一个列表
                    3：dicta.values()    #将字典的值提取为一个列表
            列表元素操作：
                1：获取元素值：list_name[idnex]    
                    #如：list_name = [1,2,3,4]  list_name[0]:1
                2：设置元素值：list_name[index]    
                    #如：list_name = [1,2,3,4]  list_name[0]=4:[4,2,3,4]
                3：插入元素值：list_name.insert(index,obj)    
                    #如：list_name = [1,2,3,4]  list_name.insert(0,5):[5,1,2,3,4]
                4：追加元素值：list_name.append(obj)    
                    #如：list_name = [1,2,3,4]  list_name.append(5):[1,2,3,4,5]
                5：移除元素值(默认是最后一个)：list_name.pop([index=-1])    
                    #如：list_name = [1,2,3,4]  list_name.pop():[1,2,3]
                6：移除第一个匹配到的元素：list_name.remove(obj)   
                    #如：list_name = [1,2,3,4,3]  list_name.remove(3):[1,2,4,3]
                7：统计列表中元素的出现的个数：list_name.count(obj)    
                    #如：list_name = [1,2,3,3,3,3]  list_name.count(3):4
                8：返回元素第一次出现时的索引：list_name.index(obj)    
                    #如：list_name = [1,2,3,3]  list_name.index(3):2
                9：返回列表中的最大值：max(list_name)    
                    #如：list_name = [1,2,3]   max(list_name):3
                10：返回列表中的最小值：min(list_name)    
                    #如：list_name = [1,2,3]  min(list_name):1

            列表其他操作：
                1：获取列表长度：len(list_name)    
                    #如：list_name = [1,2,3]  len(list_name):3
                2：反向列表中的元素：list_name.reverse()  
                    #如：list_name = [1,2,3]  list_name.reverse(list_name):[3,2,1]
                3：合并两个list：list1+list2(避免使用list1+=list2)
                    #如：list1=[1,2]  list2=[3,4] list1+list2:[1,2,3,4]
                4：重复list:list1*n,n是重复次数
                    #如：list1 = [1,2]  list1*2:[1,2,1,2]
                5：检测元素是否在列表中：in
                    #如：list1=[1,2]  1 in list1:True
                6：检测元素是否不在列表中：not in
                    #如：list1=[1,2]  1 not in list1:False
                7：使用连接符连接list中的元素：join(list_name) ;使用join()函数连接list时，list中的元素必须都为str类型，否则将会有TypeError异常；
                    #如：list_name = ['a','b','c']  "-".join(list_name):"a-b-c"

            列表的迭代：
                for item in list_name:
                    #item为列表中的元素
                或者：
                for (index,item) in enumerate(list_name):
                    #index为索引，item为列表中的值
    2：元祖：tuple
    3：字典：dict
    4：集合：set
二：Python扩展数据结构：collections
    1：具名元祖：namedTuple
    2：双端队列：deque
    3：计数器：Counter
    4：有序字典：OrderDict
    5：默认字典：defaultDict
三：序列排序：
    1：sort()
    2：sorted()
