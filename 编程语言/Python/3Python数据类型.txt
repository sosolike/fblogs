一：整数类型：
    1：python中整数类型特征：
        1：Python中的整数包括正整数、0、负整数；
        2：Python中的整数没有最大值和最小值限制，理论上可以取到正无穷和负无穷；
        3：Python中整数允许以二进制、八进制、十进制、十六进制表示：
            以二进制表示整数时，需要以 0b 或者 0B 作为前缀；
            以八进制表示整数时，需要以 0o 或者 0O 作为前缀；
            以十进制表示整数时，则无需任何前缀；
            以十六进制表示整数时，需要以 0x 或者 0X 作为前缀；
    2：整数间进制转换：
        转换至二进制：
            # number 必须是其他进制的整数
            bin(int number)    
        转换至八进制：
            # number 必须是其他进制的整数
            oct(int number)    
        转换至十六进制：
            # number 必须是其他进制的整数
            hex(int number)    
        转换至十进制：
            # number必须是其他进制的整数字符串,需要使用str(其他进制数字)进行类型转换，如str(0Xc)，不可直接使用0Xc、'0Xc'、"0Xc"
            # base参数则为当前数字的进制，默认是10进制；
            int(str number,base=10)    
    3：数据类型转换：(将其他类型数据转换为十进制整数)
        转换方式：int(str number,base=10)
        功能描述：
            1：该函数可以将str类型的其他进制数字转换为十进制的整数；
            2：该函数也可将其他数据类型的数据转换为十进制的整数；
        参数要求：
            1：在实现进制之间转换时:
                1：number参数必须是str类型的其他进制整数，如：str(0Xc)、0Xc、'0Xc'、"0Xc"等，不可直接使用0xc；
                2：必须使用base参数指定源数字的进制；不指定时默认为10进制；

            2：在将其他数据类型转换为十进制整数时:
                1：number只能是仅带有'+' 和 '-'前缀的数字字符串、浮点数、布尔值；如：
                    当number是字符串时，只能是'1','-12'等整数字符串，不能是'+1a'、'-a1'、'a1a'等，否则将会抛出ValueError异常；
                    当number是浮点数时，只能是1.23,-1.23等浮点数，不能是'1.23'，否则将抛出ValueError异常；
                    当number是布尔值时，只能是False或者True，不能是布尔值构成的字符串：'True'或者'False'，否则将抛出ValueError异常；
                    当number为空时，将返回0；
                2：数据类型转换时不能再指定base参数，否则将报出TypeError异常；

        错误异常：
            1：在使用int函数进行进制转换或者类型转换时，必须保证number是可转化的，否则将会抛出ValueError异常；如果对于number的值是未知状态，则在使用int函数时必须进行异常处理；
            2：进行类型转换时，如果携带有base参数，将会报TypeError异常；
    
    4：整数类型检测：
        1：检测变量本身是否是int类型：
            使用isinstance()检测：
                检测原理：
                    由于Python中一切皆是对象，包括变量本身也是对象，而数据类型int则是class(通过type(int)即可查看),因此可以通过检测变量是否是int类的实例对象来检测一个变量是否是int类型；
                检测方式：
                    isinstance(var_name,int)    # 如果是int类型，则返回True,否则返回False；
            使用type()函数检测：
                检测原理：
                    type()函数会返回一个变量的类型，因此可以通过type()函数的返回值是否是int来检测变量是否是int类型；
                检测方式:
                    type(var_name)    # 如果返回int则是int类型，否则不是int类型；

        2：检测变量值是否是整数字符串：
            1：使用isdigit()来检测：
                检测原理：如isdigit()函数返回True，则是纯数字字符串，否则不是；
                使用方式：var_name.isdigit()
                备注：要求var_name不能含有任何非数字字符，比如正负号('+'、'-')，或者小数点('.')均不可以；

            2：可以使用正则表达式来检测，使用正则表达式需要先导入 re 模块：
                检测原理：检测变量值是否符合正则表达式规则
                检测方式：re.match(r'[+-]?\d+$',var)  #如果返回None则表示未匹配到整数字符串；反之则是；
            
            3：可以通过 int() 函数在进行类型转换是是否抛出 ValueError 异常类判断是否是整数字符串：
                try:
                    int(var)
                except ValueError as e:
                    return False
                else:
                    return True
    