事务：
    事务，在对数据库中数据操作时经常会用到事务的概念，什么是事务？看到很多地方都将事务定义为：由多个操作组成的一个不可分割的最小工作单元；但是什么才是不可继续分割的？原子才是不可继续分割的！上述定义仅仅只是事务的一个特性：原子性而已；实际上事务有四个特性：A(原子性)、C(一致性)、I(隔离性)、D(持久性)，这四个特性共同保证了业务中对数据库中数据操作的某种需求；因此应该将满足了ACID这四个特性的一系列操作称之为一个事务；

事务的特性：ACID
    A(Atomicity)：原子性；
        原子性是指：组成事务的一组操作要么全部成功，要么全部失败；

        而原子性实现的重点在于后半句：要么全部失败；因为正常情况下，组成事务的一组操作是可以全部成功的，而且原子性并没有要求所有的操作一旦开始就必须成功不能失败，因此所有的操作都成功是一种自然而然的情况，不需要做什么特殊的处理来保证全部成功；然而一部分执行成功，一部分执行失败就要面临两种不同的局面：
            1.不关心失败的情况，成功的保持成功，失败的处于失败状态；
            2.从第一次失败的点开始，将之前已经成功的操作全部回退，让所有操作都处于失败状态，就当这一组操作从未发生过；
        我们必须对这两种局面做出选择，而原子性则选择第2种：回退已经成功的操作，让所有的操作都处于失败状态，就当这一组操作从未发生；

        为何要回退保持全部失败的状态？
        是因为在实际业务中我们有对数据的一致性需求；就是说，在事务发生之前和事务发生之后，无论事务成功与否，数据在业务逻辑上都应该是一致的；如果一部分操作执行成功，而一部分操作执行失败，就有可能破坏数据的一致性；
  
